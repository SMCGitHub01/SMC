{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-d365-byod"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PRD_BudgetDirectSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BudgetDirectSalesFiles",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.Excelfile}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_BudgetDirectSales",
								"type": "DatasetReference",
								"parameters": {
									"WorkSheet": "@{pipeline().parameters.Worksheet}",
									"Excelfile": "@{pipeline().parameters.Excelfile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Worksheet": {
						"type": "string"
					},
					"Excelfile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T14:05:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_BudgetInDirectSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BudgetInDirectSalesFiles",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.Excelfile}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_BudgetInDirectSales",
								"type": "DatasetReference",
								"parameters": {
									"WorkSheet": "@{pipeline().parameters.Worksheet}",
									"Excelfile": "@{pipeline().parameters.Excelfile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Worksheet": {
						"type": "string"
					},
					"Excelfile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T14:05:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_DistributionList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DistributeurLijsten",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.Excelfile}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_Distributeur",
								"type": "DatasetReference",
								"parameters": {
									"WorkSheet": "@{pipeline().parameters.Worksheet}",
									"Excelfile": "@{pipeline().parameters.Excelfile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Worksheet": {
						"type": "string"
					},
					"Excelfile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T14:05:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_FillMetadata_DWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy DWH view metadata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT c.TABLE_CATALOG AS TableCatalog, \nc.TABLE_SCHEMA AS TableSchema, \nc.TABLE_NAME AS TableName, \nc.COLUMN_NAME AS ColumnName,\nCASE WHEN x.TABLE_NAME IS NULL THEN 0 WHEN x.TABLE_NAME IS NOT NULL THEN 1 END AS PrimaryKey,\nc.ORDINAL_POSITION AS OrdinalPosition, \nCASE\n\t\t\t\tWHEN c.DATA_TYPE IN ('real','money','decimal','numeric') THEN 'numeric(28,12)'\n\t\t\t\tWHEN c.DATA_TYPE IN ('char','nvarchar','varchar','nchar') AND CHARACTER_MAXIMUM_LENGTH < 1 THEN 'nvarchar(max)'\n\t\t\t\tWHEN c.DATA_TYPE IN ('char','nvarchar','varchar','nchar') AND CHARACTER_MAXIMUM_LENGTH > 1024 THEN 'nvarchar(max)'\n\t\t\t\tWHEN c.DATA_TYPE IN ('char','nvarchar','varchar','nchar') AND CHARACTER_MAXIMUM_LENGTH BETWEEN 1 AND 1024 THEN 'nvarchar(' + convert(varchar,CHARACTER_MAXIMUM_LENGTH) + ')'\n\t\t\t\t--WHEN c.DATA_TYPE IN ('char','nvarchar','varchar','nchar') AND CHARACTER_MAXIMUM_LENGTH BETWEEN 8 AND 32 THEN 'nvarchar(32)'\n\t\t\t\t--WHEN c.DATA_TYPE IN ('char','nvarchar','varchar','nchar') AND CHARACTER_MAXIMUM_LENGTH BETWEEN 32 AND 128 THEN 'nvarchar(128)'\n\t\t\t\t--WHEN c.DATA_TYPE IN ('char','nvarchar','varchar','nchar') AND CHARACTER_MAXIMUM_LENGTH BETWEEN 128 AND 1024 THEN 'nvarchar(1024)'\n\t\t\t\tELSE c.DATA_TYPE\n\t\t\t END as DataType \nFROM information_schema.columns c\nLEFT OUTER JOIN (SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME \n\t\t         FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE\n                 WHERE OBJECTPROPERTY(OBJECT_ID(CONSTRAINT_SCHEMA + '.' + QUOTENAME(CONSTRAINT_NAME)), 'ISPRIMARYKEY') = 1\n                ) x ON x.TABLE_SCHEMA = c.TABLE_SCHEMA\n                   AND x.TABLE_NAME   = c.TABLE_NAME\n                   AND x.COLUMN_NAME  = c.COLUMN_NAME\nWHERE\t(c.TABLE_NAME LIKE '%fact%' OR c.TABLE_NAME LIKE '%dim%'  OR c.TABLE_NAME LIKE '%help%' OR c.TABLE_NAME LIKE '%tbl%') \nAND\t\t c.TABLE_NAME NOT IN ('DimensionAttributeStaging','DerivedDimensionAttributeStaging','DerivedDimensionAttributeValuesStaging','DimensionAttributeTranslationStaging')\nORDER BY c.TABLE_SCHEMA, c.TABLE_NAME, c.ORDINAL_POSITION",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "DELETE a\n\tFROM metadata.SourceInformationSchema a\nWHERE TableCatalog = 'd365-byod-prod'",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PRD_DWH_Dynamic_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dummy"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_DWH_Dynamic_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "metadata.SourceInformationSchema"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-MetaData"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T14:05:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_IFS_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IFS_Customer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.Excelfile}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"culture": "nl-nl"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_IFS_Customer",
								"type": "DatasetReference",
								"parameters": {
									"WorkSheet": "@{pipeline().parameters.Worksheet}",
									"Excelfile": "@{pipeline().parameters.ExcelFile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Worksheet": {
						"type": "string"
					},
					"Excelfile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_IFS_GLAccounts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IFS_GLAccounts",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.Excelfile}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"culture": "nl-nl"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_IFS_GLAccounts",
								"type": "DatasetReference",
								"parameters": {
									"WorkSheet": "@{pipeline().parameters.Worksheet}",
									"Excelfile": "@{pipeline().parameters.ExcelFile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Worksheet": {
						"type": "string"
					},
					"Excelfile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_IFS_GLTransActions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IFS_GLTransActions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.CSVFile}",
										"type": "Expression"
									}
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"culture": "nl-nl"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_IFS_GLTransActions",
								"type": "DatasetReference",
								"parameters": {
									"CSVFile": "@{pipeline().parameters.CSVFile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CSVFile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_IFS_Products')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IFS_Products",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.Excelfile}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"culture": "nl-nl"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_IFS_Products",
								"type": "DatasetReference",
								"parameters": {
									"WorkSheet": "@{pipeline().parameters.Worksheet}",
									"Excelfile": "@{pipeline().parameters.ExcelFile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Worksheet": {
						"type": "string"
					},
					"Excelfile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_IFS_SalesInvoice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IFS_SalesInvoice",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.CSVFile}",
										"type": "Expression"
									}
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"culture": "nl-nl"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PRD_IFS_SalesInvoices",
								"type": "DatasetReference",
								"parameters": {
									"CSVFile": "@{pipeline().parameters.CSVFile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CSVFile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Materialize_Views')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Full_Views",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM Process.ProcessView WHERE SourceConnectionID = 1 AND LoadGroupID = @{pipeline().parameters.LoadGroupID} AND (TemplateName NOT IN ('INCR', 'DWHINCR', 'DWHPART') OR IncrementalLoad = 0) ORDER BY LoadPriority",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Full_View",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_Views",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_Views').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Materialize_Full_Views",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat(item().SourceSchemaName, '.', item().SourceTableName)}"
										},
										{
											"name": "Destination",
											"value": "@{concat(item().TargetSchemaName, '.', item().TargetTableName)}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT @{item().SourceConnectionID} as HSO_DnA_SourceConnectionID, @{item().TargetMappingID} as HSO_DnA_TargetMappingID, '@{pipeline().parameters.StartDateTime}' as HSO_DnA_InsertDateTime, '@{pipeline().parameters.StartDateTime}' as HSO_DnA_UpdateDateTime, null as HSO_DnA_DeleteDateTime, @{item().FieldList} FROM @{item().SourceSchemaName}.@{item().SourceTableName}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 1000000,
											"preCopyScript": {
												"value": "TRUNCATE TABLE @{item().TargetSchemaName}.@{item().TargetTableName}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": " @{item().SourceSchemaName}",
												"TableName": "@{item().SourceTableName}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "@{item().TargetSchemaName}",
												"TableName": "@{item().TargetTableName}"
											}
										}
									]
								},
								{
									"name": "Update_Target_Mapping",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Materialize_Full_Views",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[process].[UpdateTargetMapping]",
										"storedProcedureParameters": {
											"GetStartDate": {
												"value": {
													"value": "@pipeline().parameters.StartDateTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TargetMappingID": {
												"value": {
													"value": "@{item().TargetMappingID}",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_D365_PROD",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Incr_Views",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM Process.ProcessView WHERE SourceConnectionID = 1 AND LoadGroupID = @{pipeline().parameters.LoadGroupID} AND (TemplateName = 'INCR' OR TemplateName = 'DWHINCR') AND IncrementalLoad = 1 ORDER BY LoadPriority",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Incr_View",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Incr_Views",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Incr_Views').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Materialize_Incr_Views",
									"description": "Copy data from the on-premises source database to the matching cloud sink database",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Destination",
											"value": "@{concat(item().TargetSchemaName, '_', item().TargetTableName)}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT @{item().FieldList} FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE ModifiedDateTime >= DATEADD(DAY, -5, GETDATE())",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 1000000,
											"sqlWriterStoredProcedureName": {
												"value": "@{item().TargetSchemaName}.@{item().StoredProcedureName} ",
												"type": "Expression"
											},
											"sqlWriterTableType": {
												"value": "@{item().TargetSchemaName}.@{item().TargetTableName}_TYPE ",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"GetStartDateTime": {
													"type": "datetime",
													"value": {
														"value": "@pipeline().parameters.StartDateTime",
														"type": "Expression"
													}
												}
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{item().SourceSchemaName}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{item().SourceTableName}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{item().TargetSchemaName}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{item().TargetTableName}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup_FULLADD_Views",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM Process.ProcessView WHERE SourceConnectionID = 1 AND LoadGroupID = @{pipeline().parameters.LoadGroupID} AND (TemplateName = 'FULL_ADD') AND IncrementalLoad = 0 ORDER BY LoadPriority",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_FullAdd_View",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_FULLADD_Views",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_FULLADD_Views').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Materialize_FullAdd_Views",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat(item().SourceSchemaName, '.', item().SourceTableName)}"
										},
										{
											"name": "Destination",
											"value": "@{concat(item().TargetSchemaName, '.', item().TargetTableName)}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT @{item().SourceConnectionID} as HSO_DnA_SourceConnectionID, @{item().TargetMappingID} as HSO_DnA_TargetMappingID, '@{pipeline().parameters.StartDateTime}' as HSO_DnA_InsertDateTime, '@{pipeline().parameters.StartDateTime}' as HSO_DnA_UpdateDateTime, null as HSO_DnA_DeleteDateTime, @{item().FieldList} FROM @{item().SourceSchemaName}.@{item().SourceTableName}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 1000000,
											"preCopyScript": {
												"value": "DELETE FROM @{item().TargetSchemaName}.@{item().TargetTableName}\nWHERE [DateExecutionBK] = (SELECT MAX(DateExecutionBK) FROM @{item().SourceSchemaName}.@{item().SourceTableName})",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "@{item().SourceSchemaName}",
												"TableName": "@{item().SourceTableName}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "@{item().TargetSchemaName}",
												"TableName": "@{item().TargetTableName}"
											}
										}
									]
								},
								{
									"name": "Update_Target_Mapping_FullAdd",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Materialize_FullAdd_Views",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[process].[UpdateTargetMapping]",
										"storedProcedureParameters": {
											"GetStartDate": {
												"value": {
													"value": "@pipeline().parameters.StartDateTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TargetMappingID": {
												"value": {
													"value": "@{item().TargetMappingID}",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_D365_PROD",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "For_Each_FULLADDCurrent-EndMonth_View",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_FULLADDCurrent-EndMonth_Views",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_FULLADDCurrent-EndMonth_Views').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Materialize_FULLADDCurrent-EndMonth_Views",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat(item().SourceSchemaName, '.', item().SourceTableName)}"
										},
										{
											"name": "Destination",
											"value": "@{concat(item().TargetSchemaName, '.', item().TargetTableName)}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT @{item().SourceConnectionID} as HSO_DnA_SourceConnectionID, @{item().TargetMappingID} as HSO_DnA_TargetMappingID, '@{pipeline().parameters.StartDateTime}' as HSO_DnA_InsertDateTime, '@{pipeline().parameters.StartDateTime}' as HSO_DnA_UpdateDateTime, null as HSO_DnA_DeleteDateTime, @{item().FieldList} FROM @{item().SourceSchemaName}.@{item().SourceTableName}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 1000000,
											"preCopyScript": {
												"value": "DELETE FROM @{item().TargetSchemaName}.@{item().TargetTableName}\nWHERE CONVERT(INT,CONVERT(VARCHAR,[HSO_DnA_InsertDateTime],112)) = CONVERT(INT,CONVERT(VARCHAR,GETUTCDATE(),112)) \n  AND\tCONVERT(INT,CONVERT(VARCHAR,[HSO_DnA_InsertDateTime],112))   NOT IN (SELECT [DateBK] FROM [dwh].[DimDate] where [IsLastDayOfMonth]=1)",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "@{item().SourceSchemaName}",
												"TableName": "@{item().SourceTableName}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "@{item().TargetSchemaName}",
												"TableName": "@{item().TargetTableName}"
											}
										}
									]
								},
								{
									"name": "Update_Target_Mapping_FULLADDCurrent-EndMonth",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Materialize_FULLADDCurrent-EndMonth_Views",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[process].[UpdateTargetMapping]",
										"storedProcedureParameters": {
											"GetStartDate": {
												"value": {
													"value": "@pipeline().parameters.StartDateTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TargetMappingID": {
												"value": {
													"value": "@{item().TargetMappingID}",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_D365_PROD",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Lookup_FULLADDCurrent-EndMonth_Views",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM Process.ProcessView WHERE SourceConnectionID = 1 AND LoadGroupID = @{pipeline().parameters.LoadGroupID} AND (TemplateName = 'FULL_ADD_EOMonth_Cur') AND IncrementalLoad = 0 ORDER BY LoadPriority",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"LoadGroupID": {
						"type": "int"
					},
					"StartDateTime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-01T06:06:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_SugarCRM_DataBase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_LoadGroup_SugarCRM",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach_LoadGroup_SugarCRM_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 14 AND\n\t (TemplateName = 'INCR')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_LoadGroup_SugarCRM",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_LoadGroup_SugarCRM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_LoadGroup_SugarCRM').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Incr_Copy_SugarCRM",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT\t@{item().SourceConnectionID} as HSO_DnA_SourceConnectionID,\n\t\t@{item().FieldList}\nFROM \n\t\t@{item().SourceTableName}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 1000000,
											"sqlWriterStoredProcedureName": {
												"value": "@{item().TargetSchemaName}.@{item().StoredProcedureName} ",
												"type": "Expression"
											},
											"sqlWriterTableType": {
												"value": "@{item().TargetSchemaName}.@{item().TargetTableName}_TYPE",
												"type": "Expression"
											},
											"storedProcedureTableTypeParameterName": {
												"value": "@{item().varType}",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"GetStartDateTime": {
													"type": "Datetime",
													"value": {
														"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
														"type": "Expression"
													}
												}
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ACCPRD_SugarCRM",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{item().TargetSchemaName}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{item().TargetTableName}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_LoadGroup_SugarCRM_FULL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 14 AND\n\t (IncrementalLoad = 0  OR TemplateName = 'FULL')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_LoadGroup_SugarCRM_FULL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_LoadGroup_SugarCRM_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_LoadGroup_SugarCRM_FULL').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Full_Copy_SugarCRM_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT\t@{item().SourceConnectionID} as HSO_DnA_SourceConnectionID,\n\t\t@{item().TargetMappingID} as HSO_DnA_TargetMappingID, \n\t\tCURDATE() as HSO_DnA_InsertDateTime, \n\t\tCURDATE() as HSO_DnA_UpdateDateTime, \n\t\t@{item().FieldList}\nFROM \n\t\t@{item().SourceTableName}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "TRUNCATE TABLE @{item().TargetSchemaName}.@{item().TargetTableName}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ACCPRD_SugarCRM",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "PRD_BYOD_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{item().TargetSchemaName}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{item().TargetTableName}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-SugarCRM"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T14:26:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_ZenDesk_Tickets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Zendesk_Tickets",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.CSVFile}",
										"type": "Expression"
									}
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.TargetSchemaName}.@{pipeline().parameters.TargetTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"culture": "nl-nl"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACC_Zendesk_Blob",
								"type": "DatasetReference",
								"parameters": {
									"CSVFile": "@{pipeline().parameters.CSVFile}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "@{pipeline().parameters.TargetSchemaName}",
									"TableName": "@{pipeline().parameters.TargetTableName}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CSVFile": {
						"type": "string"
					},
					"StartDateTime": {
						"type": "string"
					},
					"TargetTableName": {
						"type": "string"
					},
					"TargetSchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PRD_Zendesk"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_ZendDesk_ToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ImportToBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Zendesk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Unzip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD_Zendesk"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QueryOut')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"sqlReaderQuery": "SELECT --[LocationName],\n    SUM(PhysicalInventory) voorraad,\n    SUM(inv.PhysicalReservedQuantity) reserved,\n    SUM(inv.OnOrderQuantity) onorder,\n    SUM(inv.TotalAvailableQuantity) available,\n    ISNULL(MAX(dagen), -5000) AS dagen,\n    STRING_AGG(LocationName, ';') locations,\n    pr.ProductNumber,\n    MAX(pr.ProductLifecycleState) lifecycle,\n    STRING_AGG(pr.ProductLifecycleState, ';')\nFROM invent inv\n    INNER JOIN dwh.DimProduct pr\n        ON inv.DimProductBK = pr.ProductBK\n    LEFT JOIN aataldagengeleden d\n        ON d.ProductBK = pr.ProductBK\n--\t\tLEFT JOIN dwh.DimLocation ON LocationBK=inv.DimLocationBK\nWHERE --pr.ProductNumber = 'WNL-04-F04V' AND \ninv.PhysicalInventory+inv.PhysicalReservedQuantity+inv.OnOrderQuantity+inv.TotalAvailableQuantity<>0\nGROUP BY pr.ProductNumber;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMITable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "OUT-PRD"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sanctielijsten')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['results'][0]['start_date']"
										},
										"sink": {
											"name": "start_date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['standard_order']"
										},
										"sink": {
											"name": "standard_order",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['source_list_url']"
										},
										"sink": {
											"name": "source_list_url",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['addresses'][0]['country']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['results'][0]['addresses'][0]['postal_code']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['results'][0]['addresses'][0]['state']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['results'][0]['addresses'][0]['city']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['results'][0]['addresses'][0]['address']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['results'][0]['end_date']"
										},
										"sink": {
											"name": "end_date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['federal_register_notice']"
										},
										"sink": {
											"name": "federal_register_notice",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['remarks']"
										},
										"sink": {
											"name": "remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['results'][0]['source_information_url']"
										},
										"sink": {
											"name": "source_information_url",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['search_performed_at']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['sources_used'][0]['last_imported']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['sources_used'][0]['source_last_updated']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['sources_used'][0]['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sources_used'][0]['import_rate']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['offset']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['total']"
										},
										"sink": {}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ACC_DWH_Dynamic_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "stage.consolidated"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "test",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:01:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEMNUMBER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "PRICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 32
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testUpload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_DWH_Only_DWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Load_Group",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT LoadgroupID, LoadOrder FROM process.ProcessView WHERE SourceConnectionID = 1 ORDER BY LoadOrder",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Load_Group",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Load_Group').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_Materialize_Views_copy1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"LoadGroupID": {
												"value": "@{Item().LoadGroupID}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_DWH_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "ForEach BudgetDirectSales",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_BudgetDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_BudgetDirectSales').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "BudgetDirectSales",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_BudgetDirectSales",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_BudgetDirectSales",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 4 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-04T08:18:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_IFS_Stage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_Products",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 6 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_Products",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_Products').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_Products",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_Products",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach IFS_GLAccounts",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_GLAccounts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_GLAccounts').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_GLAccounts",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_GLAccounts",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach IFS_Customer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_Customer').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_Customer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_Customer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_Customer",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 5 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_GLAccounts",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 7 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_SalesInvoice",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 8 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_SalesInvoice",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_SalesInvoice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_SalesInvoice').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_SalesInvoice",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_SalesInvoice",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_GLTransActions",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 9 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_GLTransActions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_GLTransActions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_GLTransActions').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_GLTransActions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_GLTransActions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_InventoryTransactions",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 16 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_InventoryTransactions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_InventoryTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_InventoryTransactions').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IFS_InventoryTransactions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_InventoryTransactions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_Zendesk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACC_ZendDesk_ToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_CSVFiles",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 15 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach zendesk",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "zenDeskTickets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_ZenDesk_Tickets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ACC_ZendDesk_ToBlob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACC_ZendDesk_ToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "fill_dwhZendesk",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach zendesk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[process].[FactZendeskTickets_INCR]"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_PROD",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Zendesk"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:15Z"
			},
			"dependsOn": []
		}
	]
}
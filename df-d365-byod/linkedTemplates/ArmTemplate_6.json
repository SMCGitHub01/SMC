{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-d365-byod"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RefreshPowerBI_PRD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get AAD Token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Secret from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get ClientId from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get TenantId from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',activity('Get TenantId from AKV').output.value,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=',activity('Get ClientId from AKV').output.value,'&client_secret=',encodeUriComponent(activity('Get Secret from AKV').output.value))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get TenantId from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_TenantId,'/?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get ClientId from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPClientId,'/?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get Secret from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPSecret,'/?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Lookup_Refresh_List",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get AAD Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n      [workspaceGuid]\n      ,[datasetGuid]\n  FROM [audit].[RefreshBIModels] WHERE dwh='PRD'  and active=1",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Refresh_list",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Refresh_List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Refresh_List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "RefreshPowerBI_Refresh",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "RefreshPowerBI_Refresh",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"workspaceGuid": {
												"value": "@item().workspaceGuid",
												"type": "Expression"
											},
											"datasetGuid": {
												"value": "@item().datasetGuid",
												"type": "Expression"
											},
											"autorization": {
												"value": "@concat(string(activity('Get AAD Token').output.token_type),' ',string(activity('Get AAD Token').output.access_token))",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SecretName_TenantId": {
						"type": "String",
						"defaultValue": "TenantIId"
					},
					"SecretName_SPClientId": {
						"type": "String",
						"defaultValue": "ClientId"
					},
					"SecretName_SPSecret": {
						"type": "String",
						"defaultValue": "ClientSecret"
					},
					"KeyVaultDNSName": {
						"type": "string",
						"defaultValue": "https://powerbirefreshadf1.vault.azure.net/"
					},
					"workspaceGuid": {
						"type": "string"
					},
					"datasetGuid": {
						"type": "string"
					}
				},
				"variables": {
					"ProcessingErrors": {
						"type": "Boolean"
					},
					"autorization": {
						"type": "String"
					}
				},
				"folder": {
					"name": "RefreshPowerBI"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sanctielijsten_import_fromBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "USConsolidated",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "truncateSanctionlists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "blobstoragescm",
										"type": "LinkedServiceReference"
									},
									"path": "sanctielijsten"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "_id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "entity_number",
											"type": "String"
										},
										"sink": {
											"name": "entity_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "programs",
											"type": "String"
										},
										"sink": {
											"name": "programs",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "addresses",
											"type": "String"
										},
										"sink": {
											"name": "addresses",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "federal_register_notice",
											"type": "String"
										},
										"sink": {
											"name": "federal_register_notice",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "end_date",
											"type": "String"
										},
										"sink": {
											"name": "end_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "standard_order",
											"type": "String"
										},
										"sink": {
											"name": "standard_order",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "license_requirement",
											"type": "String"
										},
										"sink": {
											"name": "license_requirement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "license_policy",
											"type": "String"
										},
										"sink": {
											"name": "license_policy",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "call_sign",
											"type": "String"
										},
										"sink": {
											"name": "call_sign",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "vessel_type",
											"type": "String"
										},
										"sink": {
											"name": "vessel_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "gross_tonnage",
											"type": "String"
										},
										"sink": {
											"name": "gross_tonnage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "gross_registered_tonnage",
											"type": "String"
										},
										"sink": {
											"name": "gross_registered_tonnage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "vessel_flag",
											"type": "String"
										},
										"sink": {
											"name": "vessel_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "vessel_owner",
											"type": "String"
										},
										"sink": {
											"name": "vessel_owner",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "remarks",
											"type": "String"
										},
										"sink": {
											"name": "remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "source_list_url",
											"type": "String"
										},
										"sink": {
											"name": "source_list_url",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "alt_names",
											"type": "String"
										},
										"sink": {
											"name": "alt_names",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "citizenships",
											"type": "String"
										},
										"sink": {
											"name": "citizenships",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dates_of_birth",
											"type": "String"
										},
										"sink": {
											"name": "dates_of_birth",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "nationalities",
											"type": "String"
										},
										"sink": {
											"name": "nationalities",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "places_of_birth",
											"type": "String"
										},
										"sink": {
											"name": "places_of_birth",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "source_information_url",
											"type": "String"
										},
										"sink": {
											"name": "source_information_url",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ids",
											"type": "String"
										},
										"sink": {
											"name": "ids",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "sanctielijst_USconsolidated",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ACC_DWH_Dynamic_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "sanct.us_sanctions_list"
								}
							}
						]
					},
					{
						"name": "EU_FSD_lists",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "truncateSanctionlists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "blobstoragescm",
										"type": "LinkedServiceReference"
									},
									"path": "sanctielijsten"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Date_file",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Entity_logical_id1",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Subject_type",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Leba_numtitle",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Leba_publication_date",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "Leba_url",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "Programme",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "Entity_remark",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "Naal_logical_id",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "Entity_logical_id23",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "Naal_leba_numtitle",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "Naal_leba_publication_date",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "Naal_leba_url",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "Naal_programme",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "Naal_lastname",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "Naal_firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "Naal_middlename",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "Naal_wholename",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "Naal_gender",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "Naal_title",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 21
										},
										"sink": {
											"name": "Naal_function",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 22
										},
										"sink": {
											"name": "Naal_language",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 23
										},
										"sink": {
											"name": "Addr_logical_id",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 24
										},
										"sink": {
											"name": "Entity_logical_id35",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 25
										},
										"sink": {
											"name": "Addr_leba_numtitle",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 26
										},
										"sink": {
											"name": "Addr_leba_publication_date",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 27
										},
										"sink": {
											"name": "Addr_leba_url",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 28
										},
										"sink": {
											"name": "Addr_programme",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 29
										},
										"sink": {
											"name": "Addr_number",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 30
										},
										"sink": {
											"name": "Addr_street",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 31
										},
										"sink": {
											"name": "Addr_zipcode",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 32
										},
										"sink": {
											"name": "Addr_city",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 33
										},
										"sink": {
											"name": "Addr_country",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 34
										},
										"sink": {
											"name": "Addr_other",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 35
										},
										"sink": {
											"name": "Birt_logical_id",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 36
										},
										"sink": {
											"name": "Entity_logical_id44",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 37
										},
										"sink": {
											"name": "Birt_leba_numtitle",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 38
										},
										"sink": {
											"name": "Birt_leba_publication_date",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 39
										},
										"sink": {
											"name": "Birt_leba_url",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 40
										},
										"sink": {
											"name": "Birt_programme",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 41
										},
										"sink": {
											"name": "Birt_date",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 42
										},
										"sink": {
											"name": "Birt_place",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 43
										},
										"sink": {
											"name": "Birt_country",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 44
										},
										"sink": {
											"name": "Iden_logical_id",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 45
										},
										"sink": {
											"name": "Entity_logical_id52",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 46
										},
										"sink": {
											"name": "Iden_leba_numtitle",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 47
										},
										"sink": {
											"name": "Iden_leba_publication_date",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 48
										},
										"sink": {
											"name": "Iden_leba_url",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 49
										},
										"sink": {
											"name": "Iden_programme",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 50
										},
										"sink": {
											"name": "Iden_number",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 51
										},
										"sink": {
											"name": "Iden_country",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 52
										},
										"sink": {
											"name": "Citi_logical_id",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 53
										},
										"sink": {
											"name": "Entity_logical_id9",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 54
										},
										"sink": {
											"name": "Citi_leba_numtitle",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 55
										},
										"sink": {
											"name": "Citi_leba_publication_date",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 56
										},
										"sink": {
											"name": "Citi_leba_url",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 57
										},
										"sink": {
											"name": "Citi_programme",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 58
										},
										"sink": {
											"name": "Citi_country",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 59
										},
										"sink": {
											"name": "EU_ref_num",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "sanctielijst_EU_FSD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ACC_DWH_Dynamic_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "sanct.eu_sanctions_list"
								}
							}
						]
					},
					{
						"name": "truncateSanctionlists",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sanct.truncateSanctionlists"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_DEV",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UK_list",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "truncateSanctionlists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "blobstoragescm",
										"type": "LinkedServiceReference"
									},
									"path": "sanctielijsten"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Last_Updated",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Unique_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "OFSI_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "UN_Reference_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Primary_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "a_k_a",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "a_k_a_Non_Latin_Script",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "Regime_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "Entity_Vessel_or_Individual",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "Regime_Type_UK_UN",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "Sanctions_Imposed",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "Other_Information",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "UK_Statement_of_Reasons",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "Address_Line_1",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "Address_Line_2",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "Address_Line_3",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "Address_Line_4",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "Postcode",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "Primary_Address_Country",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "Other_suspected_locations",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 21
										},
										"sink": {
											"name": "Phone_number",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 22
										},
										"sink": {
											"name": "Website",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 23
										},
										"sink": {
											"name": "Email_address",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 24
										},
										"sink": {
											"name": "Date_Designated",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 25
										},
										"sink": {
											"name": "Name_1",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 26
										},
										"sink": {
											"name": "Name_2",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 27
										},
										"sink": {
											"name": "Name_3",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 28
										},
										"sink": {
											"name": "Name_4",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 29
										},
										"sink": {
											"name": "Name_5",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 30
										},
										"sink": {
											"name": "Name_6",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 31
										},
										"sink": {
											"name": "Honorary_Professional_Religious_titles",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 32
										},
										"sink": {
											"name": "D_O_B",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 33
										},
										"sink": {
											"name": "Nationality_ies",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 34
										},
										"sink": {
											"name": "National_Identifier_number",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 35
										},
										"sink": {
											"name": "Passport_number",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 36
										},
										"sink": {
											"name": "Position",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 37
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 38
										},
										"sink": {
											"name": "Town_of_birth",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 39
										},
										"sink": {
											"name": "Country_of_birth",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 40
										},
										"sink": {
											"name": "Type_of_entity",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 41
										},
										"sink": {
											"name": "Subsidiaries",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 42
										},
										"sink": {
											"name": "Parent_company",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 43
										},
										"sink": {
											"name": "Business_registration_number_s",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 44
										},
										"sink": {
											"name": "IMO_number",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 45
										},
										"sink": {
											"name": "Current_owner_operator_s",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 46
										},
										"sink": {
											"name": "Previous_owner_operator_s",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 47
										},
										"sink": {
											"name": "Current_believed_flag_of_ship",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 48
										},
										"sink": {
											"name": "Previous_flags",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 49
										},
										"sink": {
											"name": "Type_of_ship",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 50
										},
										"sink": {
											"name": "Tonnage_of_ship",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 51
										},
										"sink": {
											"name": "Length_of_ship",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 52
										},
										"sink": {
											"name": "Year_Built",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 53
										},
										"sink": {
											"name": "Hull_identification_number_HIN",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "sanctielijst_UK_list",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ACC_DWH_Dynamic_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "sanct.uk_sanctions_list"
								}
							}
						]
					},
					{
						"name": "VN_Individuals",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "truncateSanctionlists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['DATAID']"
										},
										"sink": {
											"name": "DATAID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VERSIONNUM']"
										},
										"sink": {
											"name": "VERSIONNUM",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['FIRST_NAME']"
										},
										"sink": {
											"name": "FIRST_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UN_LIST_TYPE']"
										},
										"sink": {
											"name": "UN_LIST_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['REFERENCE_NUMBER']"
										},
										"sink": {
											"name": "REFERENCE_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LISTED_ON']"
										},
										"sink": {
											"name": "LISTED_ON",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['COMMENTS1']"
										},
										"sink": {
											"name": "COMMENTS1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ENTITY_ALIAS']['ALIAS_NAME']"
										},
										"sink": {
											"name": "ALIAS_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ENTITY_ADDRESS']['COUNTRY']"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									}
								],
								"collectionReference": "[['CONSOLIDATED_LIST']['ENTITIES']['ENTITY']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "XmlUN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sanct",
									"TableName": "vn_sanctions_list"
								}
							}
						]
					},
					{
						"name": "VN_Entities",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VN_Individuals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['DATAID']"
										},
										"sink": {
											"name": "DATAID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VERSIONNUM']"
										},
										"sink": {
											"name": "VERSIONNUM",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['FIRST_NAME']"
										},
										"sink": {
											"name": "FIRST_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['SECOND_NAME']"
										},
										"sink": {
											"name": "SECOND_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['THIRD_NAME']"
										},
										"sink": {
											"name": "THIRD_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UN_LIST_TYPE']"
										},
										"sink": {
											"name": "UN_LIST_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['REFERENCE_NUMBER']"
										},
										"sink": {
											"name": "REFERENCE_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LISTED_ON']"
										},
										"sink": {
											"name": "LISTED_ON",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['COMMENTS1']"
										},
										"sink": {
											"name": "COMMENTS1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['INDIVIDUAL_ALIAS']['ALIAS_NAME']"
										},
										"sink": {
											"name": "ALIAS_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['INDIVIDUAL_ADDRESS']['COUNTRY']"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									}
								],
								"collectionReference": "[['CONSOLIDATED_LIST']['INDIVIDUALS']['INDIVIDUAL']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "XmlUN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sanct",
									"TableName": "vn_sanctions_list"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Sanctions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Afas dingus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@concat('Authorization: AfasToken ',base64('<token><version>1</version><data>FEEC49DD1D954D23852AD8C0FA5C165614A2736C4317161AA9ABA796E20F4379</data></token>'))",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.AfasJformMedewerkers",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Medewerker']"
										},
										"sink": {
											"name": "Medewerker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Begindatum_functie']"
										},
										"sink": {
											"name": "BeginDatum",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Einddatum_functie']"
										},
										"sink": {
											"name": "Einddatum",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Organisatorische_eenheid']"
										},
										"sink": {
											"name": "Organisatorische_eenheid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Kostenplaats']"
										},
										"sink": {
											"name": "Kostenplaats",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Omschrijving_kpl']"
										},
										"sink": {
											"name": "Omschrijving_kpl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Kostendrager']"
										},
										"sink": {
											"name": "Kostendrager",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Omschrijving_kdr']"
										},
										"sink": {
											"name": "Omschrijving_kdr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Percentage']"
										},
										"sink": {
											"name": "Percentage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Aantal_FTE']"
										},
										"sink": {
											"name": "Aantal_FTE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Werkgever']"
										},
										"sink": {
											"name": "Werkgever",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['rows']"
							}
						},
						"inputs": [
							{
								"referenceName": "AfasJson2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": "AfasJformMedewerkers"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_DWH_Only_DWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Load_Group",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT LoadgroupID, LoadOrder FROM process.ProcessView WHERE SourceConnectionID = 1 ORDER BY LoadOrder",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Load_Group",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Load_Group').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_Materialize_Views_copy1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"LoadGroupID": {
												"value": "@{Item().LoadGroupID}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "spLoadDataAfterFullLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For_Each_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[process].[spLoadDataAfterFullLoad]"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_DEV",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_DWH_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "ForEach BudgetDirectSales",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_BudgetDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_BudgetDirectSales').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "BudgetDirectSales",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_BudgetDirectSales",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_BudgetDirectSales",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 4 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-04T08:18:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_IFS_Stage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_Products",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 6 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_Products",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_Products').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_Products",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_Products",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach IFS_GLAccounts",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_GLAccounts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_GLAccounts').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_GLAccounts",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_GLAccounts",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach IFS_Customer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_Customer').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_Customer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_Customer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_Customer",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 5 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_GLAccounts",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 7 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_SalesInvoice",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 8 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_SalesInvoice",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_SalesInvoice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_SalesInvoice').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_SalesInvoice",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_SalesInvoice",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_GLTransActions",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 9 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_GLTransActions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_GLTransActions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_GLTransActions').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_GLTransActions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_GLTransActions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_InventoryTransactions",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 16 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_InventoryTransactions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_InventoryTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_InventoryTransactions').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IFS_InventoryTransactions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_IFS_InventoryTransactions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_InvoiceCorrections')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_Invoice_Corrections",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 20 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach SalesInvoice_corection",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_Invoice_Corrections",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_Invoice_Corrections').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "SalesInvoice_correction",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_Invoice_Corrections",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											},
											"TargetMapping": {
												"value": "@{Item().TargetMappingID}",
												"type": "Expression"
											},
											"SourceConnectionID": {
												"value": "@{Item().SourceConnectionID}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_Zendesk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACC_ZendDesk_ToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_CSVFiles",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 15 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach zendesk",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "zenDeskTickets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_ZenDesk_Tickets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ACC_ZendDesk_ToBlob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACC_ZendDesk_ToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "fill_dwhZendesk",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach zendesk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[process].[FactZendeskTickets_INCR]"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_DEV",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Zendesk"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_DWH_Only')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Load_Group",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT LoadgroupID, LoadOrder FROM process.ProcessView WHERE SourceConnectionID = 1 ORDER BY LoadOrder",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Load_Group",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Load_Group').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_Materialize_Views",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"LoadGroupID": {
												"value": "@{Item().LoadGroupID}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-28T07:41:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_DWH_zonder_Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PRD_UpScale",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Load_Group",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT LoadgroupID, LoadOrder FROM process.ProcessView WHERE SourceConnectionID = 1 ORDER BY LoadOrder",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Load_Group",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Load_Group').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_Materialize_Views",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"LoadGroupID": {
												"value": "@{Item().LoadGroupID}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "spLoadDataAfterFullLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For_Each_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[process].[spLoadDataAfterFullLoad]"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_PROD",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PRD_UpScale",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_UpScale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PRD_DownScale",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadDataAfterFullLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_DownScale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T14:26:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_IFS_Stage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_Products",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 6 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dum,my",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_Products",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_Products').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_Products",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_IFS_Products",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach IFS_GLAccounts",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Products",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_GLAccounts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_GLAccounts').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_GLAccounts",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_IFS_GLAccounts",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach IFS_Customer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Products",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_Customer').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_Customer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_IFS_Customer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_Customer",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 5 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_GLAccounts",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 7 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_SalesInvoice",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 8 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_SalesInvoice",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_SalesInvoice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_SalesInvoice').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_SalesInvoice",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_IFS_SalesInvoice",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_GLTransActions",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 9 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_GLTransActions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_GLTransActions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_GLTransActions').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_GLTransActions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_IFS_GLTransActions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_IFS_InventoryTransactions",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 17 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach IFS_InventoryTransactions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_IFS_InventoryTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_IFS_InventoryTransactions').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IFS_InventoryTransactions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_IFS_InventoryTransactions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_IFS_customer_only')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "ForEach IFS_Customer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_IFS_Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_IFS_Customer').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IFS_Customer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_IFS_Customer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_IFS_Customer",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 5 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_InvoiceCorrections')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_CSVFiles_Invoice_Corrections",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 18 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach SalesInvoice_corection",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles_Invoice_Corrections",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles_Invoice_Corrections').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "SalesInvoice_correction",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_Invoice_Corrections",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											},
											"TargetMapping": {
												"value": "@{Item().TargetMappingID}",
												"type": "Expression"
											},
											"SourceConnectionID": {
												"value": "@{Item().SourceConnectionID}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-IFS"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T13:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_Zendesk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PRD_ZendDesk_ToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Full_CSVFiles",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 16 ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach zendesk",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_CSVFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_CSVFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "zenDeskTickets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_ZenDesk_Tickets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CSVFile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "PRD_ZendDesk_ToBlob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_ZendDesk_ToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "fill_dwhZendesk",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach zendesk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[process].[FactZendeskTickets_INCR]"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_PROD",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD_Zendesk"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_SharepointLijsten')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetTrackinNumberList",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.trackingnumber",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32"
										},
										"sink": {
											"name": "Id",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "InhoudstypeId",
											"type": "String"
										},
										"sink": {
											"name": "ContentTypeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KlantId",
											"type": "Int32"
										},
										"sink": {
											"name": "KlantId",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "SerieId",
											"type": "Int32"
										},
										"sink": {
											"name": "SerieId",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "StrokeId",
											"type": "String"
										},
										"sink": {
											"name": "StrokeId",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ProductcategorieId",
											"type": "Int32"
										},
										"sink": {
											"name": "ProductcategorieId",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "Artikelcode",
											"type": "String"
										},
										"sink": {
											"name": "Artikelcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OmschrijvingENG",
											"type": "String"
										},
										"sink": {
											"name": "Omschrijving",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StatusValue",
											"type": "String"
										},
										"sink": {
											"name": "GtnStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StatusOpmerking",
											"type": "String"
										},
										"sink": {
											"name": "Status_Opmerking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CZ",
											"type": "Boolean"
										},
										"sink": {
											"name": "CZ",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Approved",
											"type": "Boolean"
										},
										"sink": {
											"name": "Approved",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusD365Id",
											"type": "Int32"
										},
										"sink": {
											"name": "Status_D365Id",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "MeldingD365",
											"type": "String"
										},
										"sink": {
											"name": "MeldingD365",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomerPartNr",
											"type": "String"
										},
										"sink": {
											"name": "CustomerPartNr",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OmschrijvingFR",
											"type": "String"
										},
										"sink": {
											"name": "OmschrijvingFR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OmschrijvingDE",
											"type": "String"
										},
										"sink": {
											"name": "OmschrijvingDE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RoutesId",
											"type": "String"
										},
										"sink": {
											"name": "RoutesId",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "SalesEngineerId",
											"type": "Int32"
										},
										"sink": {
											"name": "Sales_EngineerId",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ContactPerson",
											"type": "String"
										},
										"sink": {
											"name": "ContactPerson",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Aantal",
											"type": "String"
										},
										"sink": {
											"name": "Aantal",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OmschrijvingClaim",
											"type": "String"
										},
										"sink": {
											"name": "OmschrijvingClaim",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReturnedPartNumber",
											"type": "String"
										},
										"sink": {
											"name": "ReturnedPartnumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ClaimStatusId",
											"type": "String"
										},
										"sink": {
											"name": "Claim_StatusId",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "SerialNumber",
											"type": "String"
										},
										"sink": {
											"name": "SerialNumber",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Warranty",
											"type": "Boolean"
										},
										"sink": {
											"name": "Warranty",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ZendeskNr",
											"type": "String"
										},
										"sink": {
											"name": "ZendeskNr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FOBCZ",
											"type": "Double"
										},
										"sink": {
											"name": "FOBCZ",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CommodityId",
											"type": "String"
										},
										"sink": {
											"name": "CommodityId",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ProductRetour",
											"type": "Boolean"
										},
										"sink": {
											"name": "Productretour",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CZFastTrack",
											"type": "Boolean"
										},
										"sink": {
											"name": "CZFasttrack",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RepairTypeId",
											"type": "String"
										},
										"sink": {
											"name": "Repair_typeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CZSales",
											"type": "Boolean"
										},
										"sink": {
											"name": "CZSales",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "String"
										},
										"sink": {
											"name": "ShipDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PriceCalculationReport",
											"type": "Boolean"
										},
										"sink": {
											"name": "PricecalculationReport",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesCheck",
											"type": "String"
										},
										"sink": {
											"name": "SalesCheck",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists",
								"type": "DatasetReference",
								"parameters": {
									"list": "TrackingNumber"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "TrackingNumber"
								}
							}
						]
					},
					{
						"name": "GetCustomers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.customers",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists",
								"type": "DatasetReference",
								"parameters": {
									"list": "Customers"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "Customers"
								}
							}
						]
					},
					{
						"name": "GetSerie",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.serie",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists",
								"type": "DatasetReference",
								"parameters": {
									"list": "Serie"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "Serie"
								}
							}
						]
					},
					{
						"name": "GetRoutes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.routes",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists",
								"type": "DatasetReference",
								"parameters": {
									"list": "Routes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "Routes"
								}
							}
						]
					},
					{
						"name": "GetCustomerCollapse",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.CustomerCollapse",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists",
								"type": "DatasetReference",
								"parameters": {
									"list": "CustomerCollapse"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "CustomerCollapse"
								}
							}
						]
					},
					{
						"name": "PRD_SharpointSalesEngenieer",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_SharpointSalesEngenieer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "GetrepairType",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.repairtype",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists",
								"type": "DatasetReference",
								"parameters": {
									"list": "RepairType"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "repairType"
								}
							}
						]
					},
					{
						"name": "GetDistributeur",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.Distributeurs",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists_PowerBI",
								"type": "DatasetReference",
								"parameters": {
									"list": "Distributeurs"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "Distributeurs"
								}
							}
						]
					},
					{
						"name": "GetGLAccountsGrouping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.GLAccountsGrouping",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists_PowerBI",
								"type": "DatasetReference",
								"parameters": {
									"list": "GLAccountsGrouping"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "GLAccountsGrouping"
								}
							}
						]
					},
					{
						"name": "GetGLBudget",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SharePointOnlineListSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sharepoint.GLBudget",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SharePointLists_PowerBI",
								"type": "DatasetReference",
								"parameters": {
									"list": "GLBudget"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "sharepoint",
									"TableName": "GLBudget"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD_SharePoint"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InventoryToJPN')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "QueryOut",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-03-09T14:33:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sunday')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PRD_Matrix_Import",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-07-01T20:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_Customers_IFS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Process_IFS_Stage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACC_Process_IFS_Stage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-06T13:11:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ACC_Process_IFS_Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACC_Process_DWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Load_Group",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach DistributeurLijst",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach BudgetDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach BudgetInDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Process_IFS_Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Stage SugarCRM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT LoadgroupID, LoadOrder FROM process.ProcessView WHERE SourceConnectionID = 1 ORDER BY LoadOrder",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Load_Group",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Load_Group').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_Materialize_Views",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"LoadGroupID": {
												"value": "@{Item().LoadGroupID}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_Distributeur",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 2 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach DistributeurLijst",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_Distributeur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_Distributeur').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DistributionList",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_DistributionList",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach BudgetDirectSales",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_Distributeur",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Full_ExcelFiles_BudgetDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_BudgetDirectSales').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "BudgetDirectSales",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_BudgetDirectSales",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach BudgetInDirectSales",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_Distributeur",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Full_ExcelFiles_BudgetInDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_BudgetInDirectSales').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "BudgetInDirectSales",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ACC_BudgetInDirectSales",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_BudgetInDirectSales",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 3 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_BudgetDirectSales",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 4 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ACC_BYOD_DEV_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Process_IFS_Stage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACC_Process_IFS_Stage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Stage SugarCRM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACC_Process_SugarCRM_DataBase",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spLoadDataAfterFullLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For_Each_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[process].[spLoadDataAfterFullLoad]"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_DEV",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ACC_Process_Zendesk",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACC_Process_Zendesk",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ACC-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T13:46:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ACC_Process_IFS_Stage')]",
				"[concat(variables('factoryId'), '/pipelines/ACC_Process_Zendesk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRD_Process_DWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Current_Sync_And_Date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PRD_UpScale",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT GETUTCDATE() AS GetStartDateTime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							}
						}
					},
					{
						"name": "Lookup_Load_Group",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach DistributeurLijst",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach BudgetDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach BudgetInDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Process_IFS_Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Stage SugarCRM",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PRD_SharepointLijsten",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT LoadgroupID, LoadOrder FROM process.ProcessView WHERE SourceConnectionID = 1 ORDER BY LoadOrder",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For_Each_Load_Group",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Load_Group').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_Materialize_Views",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"LoadGroupID": {
												"value": "@{Item().LoadGroupID}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_Distributeur",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 2 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach DistributeurLijst",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_Distributeur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_Distributeur').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DistributionList",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_DistributionList",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach BudgetDirectSales",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_BudgetDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_BudgetDirectSales').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "BudgetDirectSales",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_BudgetDirectSales",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach BudgetInDirectSales",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Full_ExcelFiles_BudgetInDirectSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Full_ExcelFiles_BudgetInDirectSales').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "BudgetInDirectSales",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PRD_BudgetInDirectSales",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Worksheet": {
												"value": "@{Item().SourceSchemaName}",
												"type": "Expression"
											},
											"Excelfile": {
												"value": "@{Item().SourceTableName}",
												"type": "Expression"
											},
											"StartDateTime": {
												"value": "@activity('Lookup_Current_Sync_And_Date').output.firstRow.GetStartDateTime",
												"type": "Expression"
											},
											"TargetTableName": {
												"value": "@{Item().TargetTableName}",
												"type": "Expression"
											},
											"TargetSchemaName": {
												"value": "@{Item().TargetSchemaName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_BudgetInDirectSales",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 3 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup_Full_ExcelFiles_BudgetDirectSales",
						"description": "Lookup the tables from the source database which are used in the full copy.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \n\tFROM process.ProcessView \nWHERE SourceConnectionID = 4 AND\n\t (TemplateName = 'FULL' OR IncrementalLoad = 0)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PRD_BYOD_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dummy",
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Process_IFS_Stage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_Process_IFS_Stage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Stage SugarCRM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_Process_SugarCRM_DataBase",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spLoadDataAfterFullLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For_Each_Load_Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[process].[spLoadDataAfterFullLoad]"
						},
						"linkedServiceName": {
							"referenceName": "Azure_D365_PROD",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "process Zendesk",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_Process_Zendesk",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PRD_UpScale",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_UpScale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PRD_DownScale",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadDataAfterFullLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_DownScale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PRD_SharepointLijsten",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Current_Sync_And_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PRD_SharepointLijsten",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PRD-Process_DWH"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T14:26:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PRD_Process_IFS_Stage')]",
				"[concat(variables('factoryId'), '/pipelines/PRD_Process_Zendesk')]",
				"[concat(variables('factoryId'), '/pipelines/PRD_SharepointLijsten')]"
			]
		}
	]
}